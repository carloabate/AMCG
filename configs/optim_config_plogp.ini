[Experiment]
# The type of experiment to run, qm9 or zinc
type = qm9

# The index of the property to optimize according to the output of get_props() function found in mol_prop_utils.py
prop_index = 7

# The path to the weights file for the model
weights_path = data/weights/qm9_plogp.pkl 

# The path to the test dataset file
test_dataset_path = data/datasets/qm9.pkl

# The path to the SMILES full dataset file
smiles_dataset_path = data/orig_smiles/qm9_clean.txt

# The path to the file where the optimization summary will be saved
opt_summary_path = data/optim_results/summary.pkl

# The path to the file where the optimized SMILES will be saved
opt_smiles_path = data/optim_results/smiles.pkl

# Whether to evaluate the optimization or not
evaluate_optimization = True

[Optimization]
# Whether to use hydrogens or not
use_hs = True

# Whether to fix the rings in the molecules or not
fix_rings = False

# Whether to filter out macrocycles or not
filter_macrocycles = False

# The batch size for the decoder
dec_batch_size = 512

# The number of workers for parallel processing
n_workers = 1

# The learning rate for gradient ascent
learning_rate = 1

# The step size for decoding during optimization
eval_step_size = 100

# The total number of optimization steps
n_steps = 1000

# The number of resamplings during optimization
n_rejections = 5